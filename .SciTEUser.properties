
#=====================
#     S C I T E
#=====================
# 
# farvardin's dotfiles
######################
# 2023-11-07


# Global initialisation file for SciTE
# For Linux, place in ~
# For Windows,  rename to SciTE.proterties and place in same directory as SciTE.EXE
# Documentation at http://www.scintilla.org/SciTEDoc.html

# Globals

# Window sizes and visibility
if PLAT_WIN
	position.left=0
	position.top=0
if PLAT_GTK
	position.left=5
	position.top=22
position.width=576
position.height=740
#position.maximize=1
#position.tile=1
#full.screen.hides.menu=1
#minimize.to.tray=1
split.vertical=1
#output.horizontal.size=200
#output.vertical.size=60
#output.initial.hide=1
#horizontal.scrollbar=0
#horizontal.scroll.width=10000
#horizontal.scroll.width.tracking=0
#output.horizontal.scrollbar=0
#output.horizontal.scroll.width=10000
#output.horizontal.scroll.width.tracking=0
#output.scroll=0
#error.select.line=1
#end.at.last.line=0
tabbar.visible=1
#tabbar.hide.one=1
#tabbar.multiline=1
toolbar.visible=1
toolbar.detachable=1
toolbar.usestockicons=1
#menubar.detachable=1
#undo.redo.lazy=1
statusbar.visible=1
#fileselector.width=800
#fileselector.height=600
#fileselector.show.hidden=1
#magnification=-1
#output.magnification=-1

# Sizes and visibility in edit pane
#line.margin.visible=1
line.margin.width=4
margin.width=16
#fold.margin.width=16
fold.margin.colour=#bdae93
fold.margin.highlight.colour=#fbf1c7
#blank.margin.left=4
#blank.margin.right=4
buffered.draw=1
#two.phase.draw=0
use.palette=0

# Element styles
#view.eol=1
#control.char.symbol=.
caret.period=500
view.whitespace=0
view.indentation.whitespace=1
view.indentation.guides=1
view.indentation.examine=3
highlight.indentation.guides=1
caret.fore=#504945
#caret.additional.blinks=0
caret.width=2
#caret.line.back=#FFFED8
#caret.line.back.alpha=63
# show line at 72 so you can manual wrap text
edge.column=72
edge.mode=1
edge.colour=#C0DCC0
braces.check=1
braces.sloppy=1
#selection.fore=#006000
# DADADA used as background because it yields standard silver C0C0C0
# on low colour displays and a reasonable light grey on higher bit depths
#if PLAT_WINNT
#	selection.alpha=75
#	selection.back=#b8b3a5
#	selection.fore=#003600
#if PLAT_GTK
#	selection.alpha=75
#	selection.back=#b8b3a5
#	selection.fore=#003600
#selection.additional.fore=#0000A0
#selection.additional.back=#000080
#selection.additional.alpha=20
#selection.multiple=0
#selection.additional.typing=0
#virtual.space=3
#rectangular.selection.modifier=4
#whitespace.fore=#FF0000
#whitespace.back=#FFF0F0
#error.marker.fore=#0000A0
#error.marker.back=#DADAFF
#bookmark.fore=#808000
#bookmark.back=#FFFFA0
#bookmark.alpha=
#find.mark=#0000FF

# Scripting
#ext.lua.startup.script=
#ext.lua.auto.reload=1
#ext.lua.reset=1

# Checking
are.you.sure=1
#are.you.sure.for.build=1
#save.all.for.build=1
#quit.on.close.last=1
load.on.activate=1
# never set this one below to 1, it causes unwanted saves and data loss:
save.on.deactivate=0
are.you.sure.on.reload=1
reload.preserves.undo=1
#check.if.already.open=1
default.file.ext=.txt
#source.default.extensions=.h|.cxx|.bat
#title.full.path=1
#title.show.buffers=1
#pathbar.visible=1
#save.recent=1
#save.session=1
#session.bookmarks=1
#session.folds=1
#save.position=1
#open.dialog.in.file.directory=1
#strip.trailing.spaces=1
#ensure.final.line.end=1
#ensure.consistent.line.ends=1
#save.deletes.first=1
#save.check.modified.time=1
buffers=16
#buffers.zorder.switching=1
#api.*.cxx=d:\api\w.api
#locale.properties=locale.de.properties
#translation.missing=***
#read.only=1
#max.file.size=1

# Indentation
tabsize=8
indent.size=8
use.tabs=0
indent.auto=1
indent.automatic=1
indent.opening=0
indent.closing=0
#tab.indents=0
#backspace.unindents=0

# Wrapping of long lines
wrap=1
#wrap.style=2
#cache.layout=3
#output.wrap=1
#output.cache.layout=3
#wrap.visual.flags=3
#wrap.visual.flags.location=3
#wrap.indent.mode=1
#wrap.visual.startindent=4

# Folding
# enable folding, and show lines below when collapsed.
fold=1
fold.compact=1
fold.flags=16
# symbols= : 0 for arrow, 1 for +, 2 for circled +, 3 for boxed +
fold.symbols=3 
#fold.on.open=1
fold.comment=1
fold.preprocessor=1

# Find and Replace
# Internal search always available with recursive capability so use in preference to external tool
find.command=
# findstr is available on recent versions of Windows including 2000
#if PLAT_WIN
#	find.command=findstr /n /s $(find.what) $(find.files)
#find.input=$(find.what)
#if PLAT_GTK
#	find.command=grep --line-number "$(find.what)" $(find.files)
find.files=*.c *.cxx *.h
#find.in.files.close.on.find=0
#find.in.dot=1
#find.in.binary=1
#find.replace.matchcase=1
#find.replace.escapes=1
#find.replace.regexp=1
#find.replace.regexp.posix=1
#find.replace.wrap=0
#find.replacewith.focus=0
#find.replace.advanced=1
#find.use.strip=1
#replace.use.strip=1
#strip.button.height=24

# Behaviour
#eol.mode=LF
eol.auto=1
clear.before.execute=0
#vc.home.key=1
#wrap.aware.home.end.keys=1
#autocompleteword.automatic=1
#autocomplete.choose.single=1
caret.policy.xslop=1
caret.policy.width=20
caret.policy.xstrict=0
caret.policy.xeven=0
caret.policy.xjumps=0
caret.policy.yslop=1
caret.policy.lines=1
caret.policy.ystrict=1
caret.policy.yeven=1
caret.policy.yjumps=0
#visible.policy.strict=1
#visible.policy.slop=1
#visible.policy.lines=4
#time.commands=1
#caret.sticky=1
#properties.directory.enable=1

# Status Bar
statusbar.number=4
statusbar.text.1=\
li=$(LineNumber) co=$(ColumnNumber) $(OverType) ($(EOLMode)) $(FileAttr)
statusbar.text.2=\
$(BufferLength) chars in $(NbOfLines) lines. Sel: $(SelLength) chars.
statusbar.text.3=\
Now is: Date=$(CurrentDate) Time=$(CurrentTime)
statusbar.text.4=\
$(FileNameExt) : $(FileDate) - $(FileTime) | $(FileAttr)

if PLAT_WIN
	command.scite.help="file://$(SciteDefaultHome)\SciTEDoc.html"
	command.scite.help.subsystem=2
if PLAT_GTK
	command.print.*=a2ps "$(FileNameExt)"
	command.scite.help=netscape "file://$(SciteDefaultHome)/SciTEDoc.html"

# Internationalisation
# Japanese input code page 932 and ShiftJIS character set 128
#code.page=932
#character.set=128
# Unicode
code.page=65001
#code.page=0
#character.set=204
# Required for Unicode to work on GTK+:
LC_CTYPE=fr_FR.UTF-8
if PLAT_GTK
	output.code.page=65001

# Export
#export.keep.ext=1
export.html.wysiwyg=1
#export.html.tabs=1
#export.html.folding=1
export.html.styleused=1
#export.html.title.fullpath=1
#export.rtf.tabs=1
#export.rtf.font.face=Arial
#export.rtf.font.size=9
#export.rtf.tabsize=8
#export.rtf.wysiwyg=0
#export.tex.title.fullpath=1
# Magnification (added to default screen font size)
export.pdf.magnification=0
# Font: Courier, Helvetica or Times (Courier line-wraps)
export.pdf.font=Helvetica
# Page size (in points): width, height
# E.g. Letter 612,792; A4 595,842; maximum 14400,14400
export.pdf.pagesize=595,842
# Margins (in points): left, right, top, bottom
export.pdf.margins=72,72,72,72
export.xml.collapse.spaces=1
export.xml.collapse.lines=1

# Define values for use in the imported properties files
chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
chars.numeric=0123456789
chars.accented=äöåúü?Rr¡·¬‚Aaƒ‰LlCc«ÁCc…ÈEeÀÎEeÕÌŒÓDd??NnNn”Û‘ÙOo÷RrUu⁄˙Uu‹¸›˝Ttﬂˆ
# This is a better set for Russian:
#chars.accented=Rr¡·¬‚Aaƒ‰Ll®∏Cc«ÁCc…ÈEeÀÎEeÕÌŒÓDd??NnNn”Û‘ÙOo÷ˆ◊˜RrUu⁄˙Uu‹¸›˝Ttﬂ?

# The open.filter setting is used in the file selector which has a menu of filters to apply
# to the types of files seen when opening.
# There is a limit (possibly 256 characters) to the length of a filter on Windows,
# so not all source extensions can be in this setting.
source.files=*.asm;*.abc;*.c;*.cc;*.cpp;*.cxx;*.cs;*.h;*.hh;*.hxx;*.hpp;\
*.idl;*.odl;*.rc;*.rc2;*.dlg;*.def;\
*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;\
*.java;*.js;*.py;*.pl;*.rb;*.t2t;*.ni;*.inf;*.cgi;*.lua;*.conf;\
make*;*.mak;\
*.properties;*.html;*.xml;*.iface;*.bat;*.e

if PLAT_WIN
	all.files=All Files (*.*)|*.*|
if PLAT_GTK
	all.files=All Files (*)|*|Hidden Files (.*)|.*|
open.filter=\
$(all.files)\
All Source|$(source.files)|\
$(filter.abc)\
$(filter.ada)\
$(filter.conf)\
$(filter.asm)\
$(filter.asn1)\
$(filter.ave)\
$(filter.baan)\
$(filter.bash)\
$(filter.caml)\
$(filter.cmake)\
$(filter.cpp)\
#$(filter.ch)\
$(filter.css)\
$(filter.d)\
$(filter.eiffel)\
$(filter.erlang)\
$(filter.fortran)\
$(filter.gap)\
$(filter.idl)\
$(filter.inno)\
$(filter.java)\
$(filter.js)\
$(filter.kix)\
$(filter.lout)\
$(filter.lua)\
$(filter.matlab)\
$(filter.metapost)\
$(filter.mmixal)\
$(filter.nncrontab)\
$(filter.nsis)\
$(filter.opal)\
$(filter.pascal)\
$(filter.perl)\
$(filter.php)\
$(filter.pov)\
$(filter.powershell)\
$(filter.prg)\
$(filter.properties)\
$(filter.ps)\
$(filter.python)\
$(filter.r)\
$(filter.ruby)\
$(filter.sql)\
$(filter.specman)\
$(filter.tcl)\
$(filter.tex)\
$(filter.text)\
$(filter.txt2tags)\
$(filter.vb)\
$(filter.web)\
$(filter.yaml)\
$(filter.verilog)\
$(filter.vhdl)

#save.filter=$(open.filter)

# Give symbolic names to the set of fonts used in the standard styles.
if PLAT_WIN
	font.base=font:Courrier New,size:12
	font.small=font:Courrier New,size:11
	font.comment=$(font.base)
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.code.comment.nested=$(font.comment)
	font.text=$(font.base)
	font.text.comment=$(font.base)
	font.embedded.base=$(font.base)
	font.embedded.comment=$(font.base)
	font.monospace=font:Courier New,size:12
	font.vbs=font:Lucida Sans Unicode,size:12
if PLAT_GTK
#	font.base=font:!Atari ST 8x16 System Font,size:14
#	font.small=font:!Atari ST 8x16 System Font,size:12
#	font.base=font:!Atari Small,size:12
#	font.base=font:!Atari St Fonts Regular,size:12
#	font.base=font:!Monospace,size:12
#   font.small=font:!Monospace,size:11
#	font.base=font:!Latin Modern Mono,size:14
#	font.base=font:!Special Elite,size:14
#	font.base=font:!Rockwell,size:14
	font.base=font:!Noto Sans Mono,size:12
#	font.base=font:!Atari ST 8x16 System Font,size:14
#	font.base=font:!Galmuri7,size:12
	font.monospace=font:!Noto Sans Mono,size:12
	font.small=font:!Monospace,size:11
	font.comment=$(font.base)
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.code.comment.nested=$(font.comment)
	font.text=$(font.base)
	font.text.comment=$(font.base)
	font.embedded.base=$(font.base)
	font.embedded.comment=$(font.base)
#	font.monospace=font:!Atari ST 8x16 System Font,size:14
#	font.vbs=font:!Atari ST 8x16 System Font,size:12
#	font.monospace=font:!Bitstream Vera Sans Mono,size:12
#	font.vbs=font:!Bitstream Vera Sans Mono,size:12
font.js=$(font.comment)


# Give symbolic names to the set of colours used in the standard styles.
colour.code.comment.box=fore:#007F00
colour.code.comment.line=fore:#007F00
colour.code.comment.doc=fore:#3F703F
colour.code.comment.nested=fore:#A0C0A0
colour.text.comment=fore:#0000FF,back:#D0F0D0
colour.other.comment=fore:#007F00
colour.embedded.comment=back:#E0EEFF
colour.embedded.js=back:#F0F0FF
colour.notused=back:#FF0000

colour.number=fore:#007F7F
colour.keyword=fore:#00007F
colour.string=fore:#7F007F
colour.char=fore:#7F007F
colour.operator=fore:#000000
colour.preproc=fore:#7F7F00
colour.error=fore:#FFFF00,back:#FF0000

# Global default styles for all languages
# Default
style.*.32=$(font.base)
# Line number
style.*.33=back:#C0C0C0,$(font.base)
# Brace highlight
style.*.34=fore:#0000FF,bold
# Brace incomplete highlight
style.*.35=fore:#FF0000,bold
# Control characters
style.*.36=
# Indentation guides
style.*.37=fore:#C0C0C0,back:#FFFFFF


# Printing - only works on Windows
if PLAT_WIN
	#print.colour.mode=1
	print.magnification=-1
	# Setup: left, right, top, bottom margins, in local units:
	# hundredths of millimeters or thousandths of inches
	print.margins=1500,1000,1000,1500
	# Header/footer:
	# && = &; &p = current page
	# &f = file name; &F = full path
	# &d = file date; &D = current date
	# &t = file time; &T = full time
	print.header.format=$(FileNameExt) -- Printed on $(CurrentDate), $(CurrentTime) -- Page $(CurrentPage)
	print.footer.format=$(FilePath) -- File date: $(FileDate) -- File time: $(FileTime)
	# Header/footer style
	print.header.style=font:Arial,size:12,bold
	print.footer.style=font:Arial Narrow,size:10,italics

# Warnings - only works on Windows and needs to be pointed at files on machine
#if PLAT_WIN
#	warning.findwrapped=100,E:\Windows\Media\SFX\Boing.wav
#	warning.notfound=0,Effect.wav
#	warning.wrongfile=0,Glass.wav
#	warning.executeok=0,Fanfare.wav
#	warning.executeko=100,GlassBreak.wav
#	warning.nootherbookmark=100,Boing2.wav

# Define the Lexer menu,
# Each item contains three parts: menu string | file extension | key
# The only keys allowed currently are based on F-keys and alphabetic keys and look like
# [Ctrl+][Shift+][Fn|a] such as F12 or Ctrl+Shift+D.
# A '&' may be placed before a letter to be used as an accelerator. This does not work on GTK+.
menu.language=\
#FreeBasic|bas||\
Text|txt|Shift+F11|\
Abc|abc||\
#Ada|ads||\
#Apache Confi&g|conf||\
Assembler|asm||\
#ASN.1|asn1||\
#Avenue|ave||\
#Baan|bc||\
&Batch|bat||\
#Bullant|ant||\
&C / C++|c||\
#CMake|cmake||\
C&#|cs||\
#COBOL|cob||\
Csound|orc||\
CSS|css||\
#D|d||\
&Difference|diff||\
#&Eiffel|e||\
#Erlang|erl||\
&Errorlist|err||\
#FlagShip|prg||\
Forth|forth||\
#&Fortran|f90||\
#Gap|g||\
HTML H&ypertext|html|F12|\
#&InnoSetup|iss||\
&Java|java||\
Java&Script|js||\
#&Kix|kix||\
TeX|tex||\
Lisp|lisp||\
#Lot|lot||\
#Lout|lt||\
Lu&a|lua||\
#Matlab|m.matlab||\
&Makefile|mak|Ctrl+Shift+F11|\
#MetaPost|mp||\
#MMIXAL|mms||\
#&nnCron crontab|tab||\
#NSIS|nsis||\
#Objective Caml|ml||\
#Octave|m.octave||\
#Opal|impl||\
Pascal|pas||\
Pe&rl|pl||\
P&HP|php||\
#P&LSQL|spec||\
#P&ostScript|ps||\
#P&OV-Ray SDL|pov||\
#PowerShell|ps1||\
#PowerPro|powerpro||\
&Properties|properties||\
Pytho&n|py||\
#R|R||\
#Reso&urce|rc||\
Ruby|rb||\
Shell|sh||\
S&QL|sql||\
#Specman|e||\
&TCL|tcl||\
&txt2tags|t2t||\
#&VB|vb||\
#VBScr&ipt|vbs||\
#Verilog|v||\
#VHDL|vhd||\
&XML|xml|Shift+F12|\
YAML|yaml||

# User defined key commands
user.shortcuts=\
Ctrl+Shift+V|IDM_PASTEANDDOWN|\
Ctrl+PageUp|IDM_PREVFILE|\
Ctrl+PageDown|IDM_NEXTFILE|\
Alt+Left|IDM_PREVFILE|\
Alt+Right|IDM_NEXTFILE|

#KeypadPlus|IDM_EXPAND|\
#KeypadMinus|IDM_BLOCK_COMMENT|

#user.context.menu=\
#||\
#Next File|IDM_NEXTFILE|\
#Prev File|IDM_PREVFILE|

# Import those language specific properties files:
#import abaqus
#import ada
import abc
import asm
#import asn1
#import au3
import ave
#import baan
#import freebasic
#import blitzbasic
#import bullant
import caml
import conf
#import cobol
import cpp
#import cmake
#import d
import csound
import css
#import eiffel
#import erlang
#import escript
#import flagship
import forth
#import fortran
#import gap
import html
#import inno
#import kix
import lisp
#import lot
#import lout
import lua
#import matlab
#import metapost
#import mmixal
#import nimrod
#import nncrontab
#import nsis
#import opal
import others
import pascal
import perl
import pov
#import powerpro
#import powershell
import ps
#import purebasic
import python
#import r
#import rebol
import ruby
#import scriptol
#import smalltalk
#import spice
import sql
#import specman
#import tacl
#import tal
import tcl
import tex
import txt2tags
#import vb
import yaml
#import verilog
#import vhdl

# To keep menus short, these .properties files are not loaded by default.
# we copy this here to NOT exclude txt2tags like in the SciTEGlobal.properties...
imports.exclude=abaqus asl asn1 au3 ave avs baan blitzbasic bullant \
cmake cobol coffeescript csound ecl eiffel erlang escript flagship freebasic \
gap haskell hex inno json \
kix lot lout metapost mmixal modula3 nimrod nncrontab nsis \
opal oscript pov powerpro powershell ps purebasic r  rust \
scriptol smalltalk sorcins spice specman \
tacl tal verilog vhdl visualprolog



## Colors 


# Solarized colour palette
# http://ethanschoonover.com/solarized

# Window
#position.width=800
#position.height=640
# Font
#font.monospace=font:Courier,size:12
#font.base=font:Ariel Unicode MS,size:12
#font.small=font:Courier,size:10
font.comment=font.monospace
font.code.comment.box=$(font.comment)
font.code.comment.line=$(font.comment)
font.code.comment.doc=$(font.comment)
font.text=$(font.monospace)
font.text.comment=$(font.monospace)
font.embedded.base=$(font.monospace)
font.embedded.comment=$(font.comment)  
# Style
# solarized light
style.*.32=$(font.base),back:#FDF6E3,fore:#111111
caret.line.back=#EEE8D5
# gruvbox light
style.*.32=$(font.base),back:#fbf1c7,fore:#3c3836
style.*.32=$(font.base),back:#f2e5bc,fore:#3c3836
caret.line.back=#ebdbb2
# gruvbox dark
#style.*.32=$(font.base),back:#3c3836,fore:#ebdbb2
#caret.line.back=#504945
# Editor
tabsize=4
indent.size=4
use.tabs=1
tab.indents=1
backspace.unindents=1
indent.automatic=1
tab.timmy.whinge.level=1
braces.check=1
braces.sloppy=1

title.full.path=1


# include less files for css highlight
# (doesn't seem to work)

file.patterns.css=*.css;*.less

filter.css=CSS (css)|*.less;*.css|
*filter.css=$(filter.css)


# include p8 (pico-8) files for lua highlight

file.patterns.lua=*.p8;*.lua

# The set of imports allowed can be set with
#imports.include=ave
# not needed:
# imports.include=txt2tags

#style.txt2tags.



# is it needed?
# lexer.txt2tags.smart.highlighting=1

##¬†Forth

file.patterns.forth=*.fth;*.f;*.fs
shbang.forth=forth
lexer.$(file.patterns.forth)=forth
filter.forth=forth|$(file.patterns.forth)|

## UXN / tal

file.patterns.tal=*.tal

shbang.tal=tal

filter.tal=tal (tal)|$(file.patterns.tal)|

lexer.$(file.patterns.tal)=tal

# Default
BRK.tal=fore:#445675,bold


## END UXN




## Already defined in txt2tags.properties in the scite global folder. Can be overriden here

# Define SciTE settings for txt2tags.
# *.ni is for Inform7 code. It looks better using txt2tags
# syntax

file.patterns.txt2tags=*.t2t;*.ni

shbang.txt2tags=txt2tags

filter.txt2tags=Txt2tags (t2t)|$(file.patterns.txt2tags)|

lexer.$(file.patterns.txt2tags)=txt2tags

# Default
#style.txt2tags.0=fore:#1d2021
#style.txt2tags.0=fore:#ebdbb2
style.txt2tags.0=style.*.32,fore

# Special
#style.txt2tags.1=fore:#000000

# STRONG
#style.txt2tags.2=fore:#445675,bold
style.txt2tags.2=fore:#458588,bold

# STRONG 2 (not used)
style.txt2tags.3=fore:#458588

# EM1 (italic)
#style.txt2tags.4=fore:#653A39,italics
style.txt2tags.4=fore:#8f3f71,italics

# EM2 (underline)
style.txt2tags.5=fore:#386742

# H1
style.txt2tags.6=fore:#E20700,bold

# H2
style.txt2tags.7=fore:#E20700,bold

# H3
style.txt2tags.8=fore:#A81D05,bold

# H4
style.txt2tags.9=fore:#871704,bold

# H5
style.txt2tags.10=fore:#871704,bold

# H6
style.txt2tags.11=fore:#871704,bold

# prechar (not used)
style.txt2tags.12=fore:#871704,bold

# list
style.txt2tags.13=fore:#E300EE

# list
style.txt2tags.14=fore:#E300EE

# BLOCKQUOTE
style.txt2tags.15=fore:#015F52

# STRIKEOUT
#style.txt2tags.16=fore:#644A9B
style.txt2tags.16=fore:#b16286

# HRULE
style.txt2tags.17=fore:#ff901e

# LINK
style.txt2tags.18=fore:#0930DE,italics

# CODE
style.txt2tags.19=fore:#009f00

# CODE2
style.txt2tags.20=fore:#009f00

# CODEBLOCK
style.txt2tags.21=fore:#005f00

# COMMENT
style.txt2tags.22=fore:#777777

# OPTION
style.txt2tags.23=fore:#C0036E

# PREPROC
style.txt2tags.24=fore:#848B00

# POSTPROC
style.txt2tags.25=fore:#C05600


## end of txt2tags color definitions

##¬†Txt2tags build commands

command.compile.$(file.patterns.txt2tags)=txt2tags -t html -o "$(FileName).html" "$(FileNameExt)"

command.build.$(file.patterns.txt2tags)=make html && firefox "$(FileName).html"


command.go.$(file.patterns.txt2tags)=txt2tags -t html -o "$(FileName).html" "$(FileNameExt)" && firefox "$(FileName).html"


## Txt2tags extra commands



##¬†Force wrap
##¬†see https://stackoverflow.com/questions/3299699/reformatting-text-or-better-latex-in-80-colums-in-scite 

command.name.8.*=Force Wrap Text
command.mode.8.*=subsystem:lua,savebefore:no,groupundo
command.8.*=force_wrap_text
command.replace.selection.8.*=2
